/*
 * This file is generated by nl.griffelservices.proxy.Generator.
 * Please do not modify this file manually.
 * All your changes will be deleted when this file is regenerated.
 */
package org.jtester.jdbcproxy.proxy.impl;

import java.lang.reflect.Method;
import nl.griffelservices.proxy.Handler;

/** This class is a proxy implementation of java.sql.Savepoint */
public class SavepointProxy extends JdbcProxy implements java.sql.Savepoint
{
  /**
   * Constructs a new SavepointProxy object.
   * 
   * @param handler the proxy handler
   * @param proxyObject the proxy data
   */
  public SavepointProxy(Handler handler, Object proxyObject)
  {
    super(handler, java.sql.Savepoint.class, proxyObject);
  }

  /** public abstract int java.sql.Savepoint.getSavepointId() throws java.sql.SQLException */
  private static final Method m0 = getMethod(java.sql.Savepoint.class, "getSavepointId", new Class[] {});
  public int getSavepointId() throws java.sql.SQLException
  {
    return ((Integer)invoke(m0, new Object[] {})).intValue();
  }

  /** public abstract java.lang.String java.sql.Savepoint.getSavepointName() throws java.sql.SQLException */
  private static final Method m1 = getMethod(java.sql.Savepoint.class, "getSavepointName", new Class[] {});
  public java.lang.String getSavepointName() throws java.sql.SQLException
  {
    return (java.lang.String)invoke(m1, new Object[] {});
  }
}

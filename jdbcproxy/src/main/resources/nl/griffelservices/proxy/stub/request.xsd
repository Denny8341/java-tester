<?xml version = "1.0" encoding = "ISO-8859-1"?>
<!--
The contents of this file are subject to the Mozilla Public License Version 1.1
(the "License"); you may not use this file except in compliance with the
License. You may obtain a copy of the License at http://www.mozilla.org/MPL/

Software distributed under the License is distributed on an "AS IS" basis,
WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
the specific language governing rights and limitations under the License.

The Original Code is JdbcProxy.

The Initial Developer of the Original Code is Frans van Gool.
Portions created by the Initial Developer are Copyright (C) 2006
Frans van Gool. All Rights Reserved.

Contributor(s): Frans van Gool.

Alternatively, the contents of this file may be used under the terms of the
GNU Lesser General Public License (the “LGPL License”), in which case the
provisions of LGPL License are applicable instead of those above. If you wish
to allow use of your version of this file only under the terms of the LGPL
License and not to allow others to use your version of this file under the MPL,
indicate your decision by deleting the provisions above and replace them with
the notice and other provisions required by the LGPL License. If you do not
delete the provisions above, a recipient may use your version of this file
under either the MPL or the LGPL License.
-->
<schema xmlns = "http://www.w3.org/2001/XMLSchema"
	 targetNamespace = "http://www.griffelservices.nl/proxy/stub/soap/type_Request.xsd"
	 xmlns:ns = "http://www.griffelservices.nl/proxy/stub/soap/type_Request.xsd"
	 elementFormDefault = "unqualified">
	<element xmlns="http://www.w3.org/2001/XMLSchema" name="request" type="ns:type_Request"/>
	<complexType name = "type_Request">
		<sequence>
			<element name = "class" type="string"/>
			<element name = "id" type="string"/>
			<element name = "status" type="ns:type_Parameter"/>
			<element name = "method" type="string"/>
			<element name = "parameter" minOccurs = "0" maxOccurs = "unbounded">
				<complexType>
					<sequence>
						<element name="class" type="string"/>
						<element name="value" type="ns:type_Parameter" minOccurs = "0"/>
					</sequence>
				</complexType>
			</element>
		</sequence>
	</complexType>
	<complexType name = "type_Parameter">
		<simpleContent>
			<extension base = "string">
				<attribute name = "type" default = "equality">
					<simpleType>
						<restriction base = "string">
							<enumeration value = "equality"/>
							<enumeration value = "regex"/>
						</restriction>
					</simpleType>
				</attribute>
			</extension>
		</simpleContent>
	</complexType>
</schema>